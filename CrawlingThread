/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package localspider;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author Umad Rai
 */

public class CrawlingThread implements Runnable{

    List<String> results;
    String URL;
    public CrawlingThread(List<String> S,String URL) {
        results=S;
        this.URL=URL;
    }


    public void run() {
        crawl_it(URL);
    }
    public void crawl_it(String initialDirectory){
        File file_c = new File(initialDirectory);       //file crawling variable
        if (file_c.exists() & file_c.isDirectory()) {                // checking if the file folder exists then search
            System.out.println("Crawling...");

            // calling finder to search for name passed in argument and the directory
            try {
                if (finder(file_c)) {
                    System.out.println("Successfully Crawled. Enter your key word: ");

                }
            } catch (IOException e) {
                e.printStackTrace();
            }

        } else
            System.out.println("Directory path is corrupt");

    }
    public boolean finder(File cnt) throws IOException {

        File[] names = cnt.listFiles();                // storing all the files in the file array
        File file_n;
        int flag = 0;
        if (names == null) {                            // if directory is empty return from it
            return false;
        }
        for (int i = 0; i < names.length; i++) {
            file_n = names[i];
            if (file_n.isDirectory()) {
                finder(file_n);                    // going into inner directory
            }
            if (file_n.isFile()) {
                System.out.println(file_n.getCanonicalPath());
                String a_path = file_n.getAbsolutePath();
                results.add(a_path);
                // First store file name and splits on spaces and extension
            }
        }
        return false;
    }

}
